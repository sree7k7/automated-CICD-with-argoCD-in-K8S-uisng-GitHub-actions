name: ci
on:
  push:
    branches:
      - '*'
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - 'main'

env:
    image_name: windows-app
    LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
            # list of Docker images to use as base name for tags
          images: |
            ${{ env.LATES_TAG }}/${{ env.image_name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            # type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # type=raw,value=sha
            type=sha
      ## --- yo! login
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      ## ---- create and boot a builder
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
      
      ## --- docker image testing
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.LATES_TAG }}/${{ env.image_name }}
      -
        name: Test
        run: |
          docker run -d --rm ${{ env.LATES_TAG }}/${{ env.image_name }}
          docker run ${{ env.LATES_TAG }}/${{ env.image_name }} echo "${{ env.LATES_TAG }}/${{ env.image_name }} -> tested ok!"
      ## ------------------------------
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
